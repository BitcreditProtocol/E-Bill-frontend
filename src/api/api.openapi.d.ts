/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/identity/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Identity (Authorised Signer)
         * @description Mandatory fields are
         *
         *     - `name`
         *
         *     - `email`
         */
        post: operations["createIdentityAuthorisedSigner"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/upload_file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload File
         * @description Upload File
         */
        post: operations["uploadFile"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/file/testsmallpdf_0d0c8a78-fe28-43dc-9f61-459832074e82.pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get File
         * @description Get File
         */
        get: operations["getFile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/recover": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Recover with seed phrase
         * @description Recover with seed phrase
         */
        post: operations["recoverWithSeedPhrase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Identity Detail
         * @description Identity Detail
         */
        get: operations["identityDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/issue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Issue
         * @description Mandatory fields are:
         *
         *     - type
         *
         *     - country of issue
         *
         *     - city of issue
         *
         *     - issue date
         *
         *     - city of payment
         *
         *     - country of payment
         *
         *     - payer
         *
         *     - language
         *
         *
         *     If the sum is set, the currency is also mandatory.
         *
         *     If the sum is empty (important! NOT zero, actually empty), it is a blank bill of exchange.
         *
         *     The `file_upload_id` will be filled with the `id` the caller gets back from the `/bill/upload_files` endpoint, where multiple files can be uploaded.
         *     The `file_upload_id` is then used to join all the uploaded files to the bill.
         *
         *     The `type` can have the values:
         *
         *     - `0 (promissory_note)`
         *
         *     - `1 (three_parties)`
         *
         *     - `2 (draw_on_payer)`
         */
        post: operations["issue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/upload_files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload Files
         * @description Upload Files
         */
        post: operations["uploadFiles"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/96085b59c5ed430d6fc1fa6d7ea81761528de3d2aac97f42f61173933692f7ca/endorse": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Endorse
         * @description All fields are mandatory
         */
        put: operations["endorse"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/96085b59c5ed430d6fc1fa6d7ea81761528de3d2aac97f42f61173933692f7ca/mint": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Mint
         * @description All fields are mandatory
         */
        put: operations["mint"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/96085b59c5ed430d6fc1fa6d7ea81761528de3d2aac97f42f61173933692f7ca/sell": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Sell
         * @description All fields are mandatory
         */
        put: operations["sell"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/96085b59c5ed430d6fc1fa6d7ea81761528de3d2aac97f42f61173933692f7ca": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Bill Detail
         * @description The `bill_name` in the url is mandatory
         *
         *     Regarding the response, it's not yet 100% clear, which fields we will have, but the ones that are currently in there should definitely be there.
         *     Of course, if e.g. the Bill wasn't endorsed, then the endorsee won't be set etc.
         */
        get: operations["billDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bill/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Search
         * @description Mandatory Fields:
         *
         *     - `role`
         *
         *     - `currency`
         *
         *
         *     The `role` field can have the following fields:
         *
         *     - `all` / `payee / payer / contingent`
         */
        post: operations["search"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/upload_file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload File
         * @description Upload File
         */
        post: operations["uploadFile1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/file/12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3/face_123252423432423.png": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get File
         * @description Get File
         */
        get: operations["getFile1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Contact
         * @description This endpoint works for both companies (type = 1) and people (type = 0).
         *
         *     Mandatory are:
         *
         *     - name
         *
         *     - email
         *
         *     - postal address
         *
         *     - public key
         *
         *     - type
         */
        post: operations["createContact"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/edit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Change Contact
         * @description This endpoint works for both companies (type = 1) and people (type = 0).
         *
         *     There are no mandatory fields, except for the `node_id` field, which identifies which record to change.
         *
         *     The other fields are optional and if not set, will simply be left the same.
         */
        put: operations["changeContact"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Contact List
         * @description This endpoint works for both companies (type = 1) and people (type = 0).
         *
         *     Mandatory are:
         *
         *     - name
         *
         *     - email
         *
         *     - postal address
         *
         *     - public key
         *
         *     - type
         */
        get: operations["contactList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contacts/detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Contact Detail
         * @description This endpoint works for both companies (type = 1) and people (type = 0).
         *
         *     Mandatory are:
         *
         *     - name
         *
         *     - email
         *
         *     - postal address
         *
         *     - public key
         *
         *     - type
         */
        get: operations["contactDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Home
         * @description Mandatory query parameters:
         *
         *     `currency`
         */
        get: operations["home"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Unlock
         * @description Unlock
         */
        post: operations["unlock"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company/upload_file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload File
         * @description Upload File
         */
        post: operations["uploadFile2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Company
         * @description All fields, except for the `logo_upload_id and proof_of_registration_upload_id` are mandatory.
         *
         *     The file uploads use the same mechanism as for bills. Use the `/company/upload_file` endpoint to upload a file, receiving an `id` and use it for the corresponding `upload_id`.
         */
        post: operations["createCompany"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company/file/83b7a44dd89bfa6f4d3f10bdc758c6c3801e9d6b8467e9964f18f959f053dabb/testsmallpdf_0d0c8a78-fe28-43dc-9f61-459832074e82.pdf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get File
         * @description Get File
         */
        get: operations["getFile2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createIdentityAuthorisedSigner: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "email": "jsmith@example.com",
                 *       "name": "Johanna Smith"
                 *     } */
                "application/json": {
                    /** @example jsmith@example.com */
                    email?: string;
                    /** @example Johanna Smith */
                    name?: string;
                };
            };
        };
        responses: {
            /** @description Create identity */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    uploadFile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file?: string;
                };
            };
        };
        responses: {
            /** @description Upload File */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 2414-388e-4360-b4ad-692728831fdd */
                        file_upload_id?: string;
                    };
                };
            };
        };
    };
    getFile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    recoverWithSeedPhrase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "seed_phrase": "camel jumps over some fox"
                 *     } */
                "application/json": {
                    /** @example camel jumps over some fox */
                    seed_phrase?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    identityDetail: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    issue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "city_of_issuing": "Vienna",
                 *       "city_of_payment": "London",
                 *       "country_of_issuing": "AT",
                 *       "country_of_payment": "UK",
                 *       "currency": "BTC",
                 *       "file_upload_id": "16762414-388e-4360-b4ad-692728831fdd",
                 *       "issue_date": "2025-01-05",
                 *       "language": "en-UK",
                 *       "maturity_date": "2025-06-05",
                 *       "payee": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                 *       "payer": "12D3BooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77555",
                 *       "sum": "5000",
                 *       "type": 0
                 *     } */
                "application/json": {
                    /** @example Vienna */
                    city_of_issuing?: string;
                    /** @example London */
                    city_of_payment?: string;
                    /** @example AT */
                    country_of_issuing?: string;
                    /** @example UK */
                    country_of_payment?: string;
                    /** @example BTC */
                    currency?: string;
                    /** @example 16762414-388e-4360-b4ad-692728831fdd */
                    file_upload_id?: string;
                    /** @example 2025-01-05 */
                    issue_date?: string;
                    /** @example en-UK */
                    language?: string;
                    /** @example 2025-06-05 */
                    maturity_date?: string;
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    payee?: string;
                    /** @example 12D3BooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77555 */
                    payer?: string;
                    /** @example 5000 */
                    sum?: string;
                    /** @example 0 */
                    type?: number;
                };
            };
        };
        responses: {
            /** @description Issue */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 02dad7a11d8c6c7e2fec2bc1340d1ab1461bc39eb75bc41889b79d02cd8bfb54 */
                        bill_name?: string;
                    };
                };
            };
        };
    };
    uploadFiles: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    files?: string;
                };
            };
        };
        responses: {
            /** @description Upload Files */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 16762414-388e-4360-b4ad-692728831fdd */
                        file_upload_id?: string;
                    };
                };
            };
        };
    };
    endorse: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "endorsee": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3"
                 *     } */
                "application/json": {
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    endorsee?: string;
                };
            };
        };
        responses: {
            /** @description Endorse */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    mint: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "currency": "crbtc",
                 *       "endorsee": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                 *       "sum": "6000"
                 *     } */
                "application/json": {
                    /** @example crbtc */
                    currency?: string;
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    endorsee?: string;
                    /** @example 6000 */
                    sum?: string;
                };
            };
        };
        responses: {
            /** @description Mint */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    sell: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "currency": "btc",
                 *       "endorsee": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                 *       "sum": "6000"
                 *     } */
                "application/json": {
                    /** @example btc */
                    currency?: string;
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    endorsee?: string;
                    /** @example 6000 */
                    sum?: string;
                };
            };
        };
        responses: {
            /** @description Sell */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    billDetail: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Detail */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        bill?: {
                            /** @example true */
                            accepted?: boolean;
                            /** @example 96085b59c5ed430d6fc1fa6d7ea81761528de3d2aac97f42f61173933692f7ca */
                            bill_name?: string;
                            /** @example Vienna */
                            city_of_issuing?: string;
                            /** @example London */
                            city_of_payment?: string;
                            /** @example AT */
                            country_of_issuing?: string;
                            /** @example UK */
                            country_of_payment?: string;
                            /** @example sat */
                            currency?: string;
                            drawee?: {
                                /** @example Hayek Ltd. */
                                name?: string;
                            };
                            drawer?: {
                                /** @example Hayek Ltd. */
                                name?: string;
                            };
                            /** @example true */
                            endorsed?: boolean;
                            endorsee?: {
                                /** @example Might or might not exist */
                                name?: string;
                            };
                            /** @example [
                             *       {
                             *         "file_name": "screenshot2024-10-23at11_16762414-388e-4360-b4ad-692728831fdd.png"
                             *       }
                             *     ] */
                            files?: {
                                /** @example screenshot2024-10-23at11_16762414-388e-4360-b4ad-692728831fdd.png */
                                file_name?: string;
                            }[];
                            /** @example 2025-01-05 */
                            issue_date?: string;
                            /** @example 2025-06-05 */
                            maturity_date?: string;
                            /** @example false */
                            paid?: boolean;
                            payee?: {
                                /** @example John Smith */
                                name?: string;
                            };
                            /** @example 5000 */
                            sum?: string;
                            /** @example 1731593928 */
                            time_of_drawing?: number;
                        };
                    };
                };
            };
        };
    };
    search: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "filter": {
                 *         "currency": "btc",
                 *         "date_range": {
                 *           "from": "2024-01-01",
                 *           "to": "2024-12-31"
                 *         },
                 *         "role": "all",
                 *         "search_term": "smith"
                 *       }
                 *     } */
                "application/json": {
                    filter?: {
                        /** @example btc */
                        currency?: string;
                        date_range?: {
                            /** @example 2024-01-01 */
                            from?: string;
                            /** @example 2024-12-31 */
                            to?: string;
                        };
                        /** @example all */
                        role?: string;
                        /** @example smith */
                        search_term?: string;
                    };
                };
            };
        };
        responses: {
            /** @description Search */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example [
                         *       {
                         *         "bill_name": "02dad7a11d8c6c7e2fec2bc1340d1ab1461bc39eb75bc41889b79d02cd8bfb54",
                         *         "drawer": {
                         *           "name": "Hayek Ltd."
                         *         },
                         *         "holder": {
                         *           "name": "John Smith"
                         *         },
                         *         "issue_date": "2024-11-31",
                         *         "payee": {
                         *           "name": "John Smith"
                         *         },
                         *         "payer": {
                         *           "name": "Hayek Ltd."
                         *         },
                         *         "role": "payee",
                         *         "sum": {
                         *           "amount": "15000",
                         *           "currency": "sat"
                         *         }
                         *       }
                         *     ] */
                        bills?: {
                            /** @example 02dad7a11d8c6c7e2fec2bc1340d1ab1461bc39eb75bc41889b79d02cd8bfb54 */
                            bill_name?: string;
                            drawer?: {
                                /** @example Hayek Ltd. */
                                name?: string;
                            };
                            holder?: {
                                /** @example John Smith */
                                name?: string;
                            };
                            /** @example 2024-11-31 */
                            issue_date?: string;
                            payee?: {
                                /** @example John Smith */
                                name?: string;
                            };
                            payer?: {
                                /** @example Hayek Ltd. */
                                name?: string;
                            };
                            /** @example payee */
                            role?: string;
                            sum?: {
                                /** @example 15000 */
                                amount?: string;
                                /** @example sat */
                                currency?: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    uploadFile1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getFile1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createContact: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "address": "Smithstreet 15, Top 22",
                 *       "avatar_file_upload_id": "2414-388e-4360-b4ad-692728831fdd",
                 *       "city": "Vienna",
                 *       "city_of_birth_or_registration": "Vienna",
                 *       "country": "AT",
                 *       "country_of_birth_or_registration": "AT",
                 *       "date_of_birth_or_registration": "1998-10-17",
                 *       "email": "johnny_smith@example.com",
                 *       "identification_number": "12315412312",
                 *       "name": "John Smith",
                 *       "proof_document_file_upload_id": "2556-388e-4360-b4ad-692728831fdd",
                 *       "public_key": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                 *       "type": 0,
                 *       "zip": "1020"
                 *     } */
                "application/json": {
                    /** @example Smithstreet 15, Top 22 */
                    address?: string;
                    /** @example 2414-388e-4360-b4ad-692728831fdd */
                    avatar_file_upload_id?: string;
                    /** @example Vienna */
                    city?: string;
                    /** @example Vienna */
                    city_of_birth_or_registration?: string;
                    /** @example AT */
                    country?: string;
                    /** @example AT */
                    country_of_birth_or_registration?: string;
                    /** @example 1998-10-17 */
                    date_of_birth_or_registration?: string;
                    /** @example johnny_smith@example.com */
                    email?: string;
                    /** @example 12315412312 */
                    identification_number?: string;
                    /** @example John Smith */
                    name?: string;
                    /** @example 2556-388e-4360-b4ad-692728831fdd */
                    proof_document_file_upload_id?: string;
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    public_key?: string;
                    /** @example 0 */
                    type?: number;
                    /** @example 1020 */
                    zip?: string;
                };
            };
        };
        responses: {
            /** @description Create Contact */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    changeContact: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "avatar_file_upload_id": "2414-388e-4360-b4ad-692728831fdd",
                 *       "city": "Vienna",
                 *       "country": "AT",
                 *       "date_of_birth_or_registration": "1998-10-17",
                 *       "email": "johnny_smith@example.com",
                 *       "identification_number": "12315412312",
                 *       "name": "John Smith",
                 *       "node_id": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                 *       "postal_address": "Smithstreet 272, 1030 Vienna",
                 *       "proof_document_file_upload_id": "2556-388e-4360-b4ad-692728831fdd"
                 *     } */
                "application/json": {
                    /** @example 2414-388e-4360-b4ad-692728831fdd */
                    avatar_file_upload_id?: string;
                    /** @example Vienna */
                    city?: string;
                    /** @example AT */
                    country?: string;
                    /** @example 1998-10-17 */
                    date_of_birth_or_registration?: string;
                    /** @example johnny_smith@example.com */
                    email?: string;
                    /** @example 12315412312 */
                    identification_number?: string;
                    /** @example John Smith */
                    name?: string;
                    /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                    node_id?: string;
                    /** @example Smithstreet 272, 1030 Vienna */
                    postal_address?: string;
                    /** @example 2556-388e-4360-b4ad-692728831fdd */
                    proof_document_file_upload_id?: string;
                };
            };
        };
        responses: {
            /** @description Edit Contact */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    contactList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Contact List */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example [
                         *       {
                         *         "address": "Smithstreet 15, Top 22",
                         *         "avatar": "face_123252423432423.png",
                         *         "city": "Vienna",
                         *         "country": "AT",
                         *         "name": "John Smith",
                         *         "node_id": "12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3",
                         *         "type": 0,
                         *         "zip": "1020"
                         *       },
                         *       {
                         *         "address": "Smithstreet 15, Top 22",
                         *         "avatar": "logo_123252423432423_.png",
                         *         "city": "Vienna",
                         *         "country": "AT",
                         *         "name": "Hayek Ltd.",
                         *         "node_id": "12D3KooWBN48JhNXAKhKx3523423423HTfPYxjWiGpcKYGuR77cy3",
                         *         "type": 1,
                         *         "zip": "1020"
                         *       }
                         *     ] */
                        contacts?: {
                            /** @example Smithstreet 15, Top 22 */
                            address?: string;
                            /** @example face_123252423432423.png */
                            avatar?: string;
                            /** @example Vienna */
                            city?: string;
                            /** @example AT */
                            country?: string;
                            /** @example John Smith */
                            name?: string;
                            /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                            node_id?: string;
                            /** @example 0 */
                            type?: number;
                            /** @example 1020 */
                            zip?: string;
                        }[];
                    };
                };
            };
        };
    };
    contactDetail: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Contact Detail */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Smithstreet 15, Top 22 */
                        address?: string;
                        /** @example face_123252423432423.png */
                        avatar?: string;
                        /** @example Vienna */
                        city?: string;
                        /** @example Vienna */
                        city_of_birth_or_registration?: string;
                        /** @example AT */
                        country?: string;
                        /** @example AT */
                        country_of_birth_or_registration?: string;
                        /** @example 1998-10-17 */
                        date_of_birth_or_registration?: string;
                        /** @example johnny_smith@example.com */
                        email?: string;
                        /** @example 12315412312 */
                        identification_number?: string;
                        /** @example John Smith */
                        name?: string;
                        /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                        node_id?: string;
                        /** @example passport1423523423.pdf */
                        proof_document?: string;
                        /** @example 12D3KooWBN48JhNXAKhKxbUVM1YXRrHTfPYxjWiGpcKYGuR77cy3 */
                        public_key?: string;
                        /** @example 0 */
                        type?: number;
                        /** @example 1020 */
                        zip?: string;
                    };
                };
            };
        };
    };
    home: {
        parameters: {
            query?: {
                currency?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Home */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        balances?: {
                            contingent?: {
                                /** @example 15.06532 */
                                amount?: string;
                                /** @example btc */
                                currency?: string;
                            };
                            payee?: {
                                /** @example 0.06532 */
                                amount?: string;
                                /** @example btc */
                                currency?: string;
                            };
                            payer?: {
                                /** @example 2.06532 */
                                amount?: string;
                                /** @example btc */
                                currency?: string;
                            };
                        };
                    };
                };
            };
            /** @description Home invalid currency Error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example parameter_error */
                        error?: string;
                        /** @example Currency with code 'invalid' not found */
                        message?: string;
                    };
                };
            };
        };
    };
    unlock: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "pin": "1234"
                 *     } */
                "application/json": {
                    /** @example 1234 */
                    pin?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadFile2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file?: string;
                };
            };
        };
        responses: {
            /** @description Upload File */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 2414-388e-4360-b4ad-692728831fdd */
                        file_upload_id?: string;
                    };
                };
            };
        };
    };
    createCompany: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                /** @example {
                 *       "address": "Smithstreet 15, Top 22",
                 *       "city": "Vienna",
                 *       "city_of_registration": "Vienna",
                 *       "country": "AT",
                 *       "country_of_registration": "AT",
                 *       "email": "hayek_ltd@example.com",
                 *       "logo_upload_id": "1efa32d0-ef38-41b0-bc55-23642f0643e5",
                 *       "name": "Hayek Ltd.",
                 *       "proof_of_registration_upload_id": "1efa2808-7632-44f0-b423-5d77b05da97f",
                 *       "registration_date": "2011-08-22",
                 *       "registration_number": "1234 555 4321",
                 *       "zip": "1020"
                 *     } */
                "application/json": {
                    /** @example Smithstreet 15, Top 22 */
                    address?: string;
                    /** @example Vienna */
                    city?: string;
                    /** @example Vienna */
                    city_of_registration?: string;
                    /** @example AT */
                    country?: string;
                    /** @example AT */
                    country_of_registration?: string;
                    /** @example hayek_ltd@example.com */
                    email?: string;
                    /** @example 1efa32d0-ef38-41b0-bc55-23642f0643e5 */
                    logo_upload_id?: string;
                    /** @example Hayek Ltd. */
                    name?: string;
                    /** @example 1efa2808-7632-44f0-b423-5d77b05da97f */
                    proof_of_registration_upload_id?: string;
                    /** @example 2011-08-22 */
                    registration_date?: string;
                    /** @example 1234 555 4321 */
                    registration_number?: string;
                    /** @example 1020 */
                    zip?: string;
                };
            };
        };
        responses: {
            /** @description Create Company */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                };
            };
        };
    };
    getFile2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
